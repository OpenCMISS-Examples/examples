global a = 1.0;
global b = pi/2;
global c = 0;
global k = 1;

global L = 3;

global ne = 10;

global np = ne+1;

global theta = 1.0;

global deltat = 0.01;
global startt = 0.0;
global stopt = 0.1;

global x = zeros(np,1);
global alpha = zeros(np,1);

global K = zeros(np,np);
global C = zeros(np,np);

K1 = ne/L;
K2 = -2*ne/L;
C1 = L/(6*ne);
C2 = (2*L)/(3*ne);

x(1) = 0.0;
alpha(1) = 0.0;

K(1,1) = K2/2;
K(1,2) = K1;

C(1,1) = C2/2;
C(1,2) = C1;

for i = 2:np-1

  x(i) = (i-1)*L/ne;

  K(i,i-1) = K1;
  K(i,i) = K2;
  K(i,i+1) = K1;

  C(i,i-1) = C1;
  C(i,i) = C2;
  C(i,i+1) = C1;
    
endfor

x(np) = L;

K(np,np-1) = K1;
K(np,np) = K2/2;

C(np,np-1) = C1;
C(np,np) = C2/2;

x

K

C

global t = startt;

global analyticu = a*exp(4*pi*pi*k*t/(L*L))*cos(2*pi*x/L+b)+c;

global A = C + theta*deltat*K;

global u = analyticu;

global prevu;
global meanpredictedu;
global predictedu;
global b;

while t < stopt

t = t + deltat

analyticu = a*exp(4*pi*pi*k*t/(L*L))*cos(2*pi*x/L+b)+c

prevu = u;

meanpredictedu = u;

predictedu = u;

alpha(1) = (analyticu(1)-predictedu(1))/deltat;
alpha(np) = (analyticu(np)-predictedu(np))/deltat;

b = -K*meanpredictedu;

r1 = A(:,1)*alpha(1);

r2 = A(:,np)*alpha(np);

rhs = b - r1 - r2;

reducedA = A(2:np-1,2:np-1);

reducedrhs = rhs(2:np-1);

reducedalpha = reducedA\reducedrhs;

alpha(2:np-1) = reducedalpha(1:np-2);

u = predictedu + deltat*alpha

error = zeros(np,1);

for i = 1:np

  error(i) = 100.0*(u(i)-analyticu(i))/analyticu(i);

endfor

error

v = (u - prevu)/deltat;

analyticv = 4*pi*pi*k*a/(L*L)*exp(4*pi*pi*k*t/(L*L))*cos(2*pi*x/L+b);

resid = C*v + K*u 

analyticresid = C*analyticv + K*analyticu

endwhile
